<body class="homepage">
<script>
    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
        (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
        m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-17788063-2', 'auto');
    ga('send', 'pageview');

</script>
<div id="page-wrapper">

  <!-- Nav -->
  <%= render template: 'layouts/header' %>

  <div id="main-wrapper">
    <div id="main" class="container">
      <div class="row" style="padding-bottom:0px;">
        <!-- メインコンテンツ １カラム or ２カラム ここから -->
        <!-- 1カラム -->
        <div class="12u" style="padding-top: 0px;">
          <div class="content">
            <br>
            <div class="pankuzu_div">
              <div class="pankuzu_in"><%= link_to 'HOME', root_path %>　＞　デッキ作成</div>
            </div>
            <h1 class="common">遊戯王デッキ 新規登録</h1>
            <%= form_for @deck, url: decks_path, method: :post, html: {name: "fm"} do |f| %>
              <div id="deck_regist_area">
                <div id="deck_regist_left">
                  <%= f.text_field :name, placeholder: 'デッキ名' %>
                  <%= f.select :category_id, Category.all.map{|m| [m.name, m.id]}, {include_brank: 'テーマ'} %>
                  <input type="button" value="デッキ登録" onclick="checkSubmit()" />
                  <br class="clear" /><br class="clear" />
                  <select name="data[ctgry]" id="ctgry">
                    <option value="">-- カテゴリ --</option>
                    <option value="8">A・O・J（ｱｰﾘｵﾌﾞｼﾞｬｽﾃｨｽ）</option>
                    <option value="1">BF（ブラックフェザー）</option>
                    <option value="127">BK（ﾊﾞｰﾆﾝｸﾞﾅｯｸﾗｰ）</option>
                    <option value="44">C（コクーン）</option>
                    <option value="27">C（チェーン）</option>
                    <option value="50">D-HERO（ﾃﾞｨｰﾋｰﾛｰ）</option>
                    <option value="248">DD（ディーディー）</option>
                    <option value="26">D（ディフォーマー）</option>
                    <option value="142">E-HERO（ｲｰﾋﾞﾙﾋｰﾛｰ）</option>
                    <option value="240">EM(ｴﾝﾀﾒｲｲﾄ)・Em(ｴﾝﾀﾒｲｼﾞ) </option>
                    <option value="34">E・HERO（ｴﾚﾒﾝﾀﾙﾋｰﾛｰ）</option>
                    <option value="162">HERO（ヒーロー）</option>
                    <option value="83">H・C、H-C（ﾋﾛｲｯｸ）</option>
                    <option value="163">LV（レベル・レベルアップモンスター）</option>
                    <option value="69">NO.（ﾅﾝﾊﾞｰｽﾞ）</option>
                    <option value="53">N（ネオスペーシアン）</option>
                    <option value="165">RUM・CNo・CX</option>
                    <option value="146">SD（ｽｰﾊﾟｰﾃﾞｨﾌｪﾝｽ）</option>
                    <option value="46">Sin（シン）</option>
                    <option value="269">SR(スピードロイド )</option>
                    <option value="167">TG（テックジーナス）</option>
                    <option value="10">X-セイバー</option>
                    <option value="168">ZW（ゼアル・ウェポン）</option>
                    <option value="235">★エクシーズモンスター★</option>
                    <option value="236">★シンクロモンスター★</option>
                    <option value="237">★ペンデュラムモンスター★</option>
                    <option value="291">★リンクモンスター★</option>
                    <option value="239">★儀式モンスター★</option>
                    <option value="238">★融合モンスター★</option>
                    <option value="75">おジャマ</option>
                    <option value="265">アクアアクトレス・アクアリウム</option>
                    <option value="29">アマゾネス</option>
                    <option value="272">アモルファージ</option>
                    <option value="31">アルカナフォース</option>
                    <option value="263">アロマ</option>
                    <option value="32">アンティーク・ギア</option>
                    <option value="143">アンブラル</option>
                    <option value="220">アーティファクト</option>
                    <option value="262">イグナイト</option>
                    <option value="23">インフェルニティ</option>
                    <option value="254">インフェルノイド</option>
                    <option value="20">インヴェルズ</option>
                    <option value="326">ウィッチクラフト</option>
                    <option value="224">エクシーズ</option>
                    <option value="33">エレキ</option>
                    <option value="313">エレメントセイバー</option>
                    <option value="328">エンディミオン</option>
                    <option value="74">エヴォル</option>
                    <option value="28">エーリアン</option>
                    <option value="267">オッドアイズ</option>
                    <option value="298">オルターガイスト</option>
                    <option value="268">カオス・ソルジャー</option>
                    <option value="38">カラクリ</option>
                    <option value="36">ガエル</option>
                    <option value="77">ガガガ</option>
                    <option value="37">ガジェット</option>
                    <option value="17">ガスタ</option>
                    <option value="172">ガーディアン</option>
                    <option value="82">ギアギア</option>
                    <option value="122">ギミック・パペット</option>
                    <option value="92">ギャラクシー</option>
                    <option value="244">クリフォート</option>
                    <option value="299">クローラー</option>
                    <option value="43">コアキメイル</option>
                    <option value="312">コード・トーカー</option>
                    <option value="174">ゴゴゴ</option>
                    <option value="255">ゴブリン</option>
                    <option value="154">ゴルゴニック</option>
                    <option value="151">ゴーストリック</option>
                    <option value="157">サイバー</option>
                    <option value="303">サブテラー</option>
                    <option value="331">シムルグ</option>
                    <option value="222">シャドール</option>
                    <option value="73">シンクロン</option>
                    <option value="14">ジェネクス</option>
                    <option value="19">ジェムナイト</option>
                    <option value="71">ジャンク</option>
                    <option value="5">ジュラック</option>
                    <option value="47">スクラップ</option>
                    <option value="179">ズババ</option>
                    <option value="76">セイクリッド</option>
                    <option value="181">セイヴァー</option>
                    <option value="261">セフィラ</option>
                    <option value="68">ゼンマイ</option>
                    <option value="307">ダイナミスト</option>
                    <option value="183">ダストン</option>
                    <option value="123">デュアル</option>
                    <option value="49">デーモン</option>
                    <option value="184">トゥーン</option>
                    <option value="293">トリックスター</option>
                    <option value="121">ドドド</option>
                    <option value="11">ドラグニティ</option>
                    <option value="7">ナチュル</option>
                    <option value="52">ネオス</option>
                    <option value="319">ネフティス</option>
                    <option value="22">ハーピィ</option>
                    <option value="186">バウンサー</option>
                    <option value="310">バスター・ブレイダー・破壊剣(はかいけん)</option>
                    <option value="285">バージェストマ</option>
                    <option value="245">ファーニマル・デストーイ・エッジインプ</option>
                    <option value="188">フィッシュボーグ</option>
                    <option value="156">フォトン</option>
                    <option value="21">フォーチュンレディ</option>
                    <option value="6">フレムベル</option>
                    <option value="260">ブンボーグ</option>
                    <option value="320">プランキッズ</option>
                    <option value="191">ペンギン</option>
                    <option value="147">ホール・落とし穴・蟲惑魔(こわくま)</option>
                    <option value="56">マシンナーズ</option>
                    <option value="85">マドルチェ</option>
                    <option value="152">マリスボラス</option>
                    <option value="271">ムーンライト</option>
                    <option value="300">メタファイズ</option>
                    <option value="282">メタルフォーゼ</option>
                    <option value="120">ライトレイ</option>
                    <option value="2">ライトロード</option>
                    <option value="97">ランク3エクシーズ</option>
                    <option value="96">ランク4エクシーズ</option>
                    <option value="95">ランク5エクシーズ</option>
                    <option value="16">ラヴァル</option>
                    <option value="193">リアクター</option>
                    <option value="194">リゾネーター</option>
                    <option value="18">リチュア</option>
                    <option value="195">レアル・ジェネクス</option>
                    <option value="196">レッドアイズ</option>
                    <option value="57">レプティレス</option>
                    <option value="58">ロイド</option>
                    <option value="12">ワーム</option>
                    <option value="15">ヴァイロン</option>
                    <option value="297">ヴァレット</option>
                    <option value="153">ヴァンパイア</option>
                    <option value="80">ヴェノム</option>
                    <option value="35">ヴェルズ</option>
                    <option value="305">ヴェンデット</option>
                    <option value="54">ヴォルカニック</option>
                    <option value="308">不知火(しらぬい)</option>
                    <option value="48">代行者（だいこうしゃ）</option>
                    <option value="84">先史遺産(ｵｰﾊﾟｰﾂ)</option>
                    <option value="212">光天使(ホーリー・ライトニング)</option>
                    <option value="24">六武衆（ろくぶしゅう）</option>
                    <option value="294">剛鬼(ごうき)</option>
                    <option value="41">剣闘獣（ｸﾞﾗﾃﾞｨｱﾙﾋﾞｰｽﾄ）</option>
                    <option value="279">化合獣(ｶｺﾞｳｼﾞｭｳ)</option>
                    <option value="286">十二獣</option>
                    <option value="266">占術姫(せんじゅつき)</option>
                    <option value="289">召喚獣(しょうかんじゅう)</option>
                    <option value="327">呪眼(じゅがん)</option>
                    <option value="45">地縛神（じばくしん）</option>
                    <option value="280">堕天使(だてんし)</option>
                    <option value="25">墓守（はかもり）</option>
                    <option value="284">壊獣(かいじゅう)</option>
                    <option value="330">天威(てんい)</option>
                    <option value="301">天気(てんき)</option>
                    <option value="247">契約書(けいやくしょ)</option>
                    <option value="249">妖仙獣(ようせんじゅう)</option>
                    <option value="322">守護竜 (しゅごりゅう)</option>
                    <option value="55">宝玉獣（ほうぎょくじゅう）</option>
                    <option value="317">宣告者(デクレアラー)</option>
                    <option value="217">封印(ふういん)されし</option>
                    <option value="39">巨大戦艦（きょだいせんかん）</option>
                    <option value="324">帝（みかど）</option>
                    <option value="246">幻奏(げんそう)</option>
                    <option value="273">幻影騎士団(ﾌｧﾝﾄﾑﾅｲﾂ)</option>
                    <option value="290">幻煌龍(げんおうりゅう)</option>
                    <option value="210">幻獣(げんじゅう)</option>
                    <option value="126">幻獣機(げんじゅうき)</option>
                    <option value="211">幻蝶(げんちょう)の刺客(しきゃく)</option>
                    <option value="250">影霊衣(ネクロス)</option>
                    <option value="275">彼岸(ひがん)</option>
                    <option value="129">征竜(せいりゅう)</option>
                    <option value="79">忍者・忍法(ﾆﾝｼﾞｬ・ﾆﾝﾎﾟｳ)</option>
                    <option value="288">捕食植物(ﾌﾟﾚﾃﾞﾀｰﾌﾟﾗﾝﾂ)</option>
                    <option value="318">方界(ほうかい)</option>
                    <option value="277">旧神・古神・外神</option>
                    <option value="221">星因士・星輝士（テラナイト）</option>
                    <option value="295">星杯(せいはい)・星遺物(せいいぶつ)</option>
                    <option value="296">時械神(ジカイシン)</option>
                    <option value="30">暗黒界（あんこくかい）</option>
                    <option value="155">森羅（しんら）</option>
                    <option value="4">極星（きょくせい）</option>
                    <option value="204">機皇(きこう)</option>
                    <option value="145">武神(ブジン)</option>
                    <option value="278">水晶機巧（ｸﾘｽﾄﾛﾝ）</option>
                    <option value="88">水精鱗(ﾏｰﾒｲﾙ)</option>
                    <option value="13">氷結界（ひょうけっかい）</option>
                    <option value="329">海晶乙女(マリンセス)</option>
                    <option value="202">海皇(かいおう)</option>
                    <option value="100">炎星(ｴﾝｾｲ)</option>
                    <option value="110">炎王(えんおう)</option>
                    <option value="325">無限起動</option>
                    <option value="78">甲虫装機(ｲﾝｾﾞｸﾀｰ)</option>
                    <option value="323">真竜(しんりゅう)</option>
                    <option value="314">空牙団</option>
                    <option value="223">竜星</option>
                    <option value="309">竜魔王(りゅうまおう)</option>
                    <option value="89">紋章獣(ﾓﾝｼｮｳｼﾞｭｳ)</option>
                    <option value="90">素早い(すばやい)</option>
                    <option value="87">聖刻(ｾｲｺｸ)</option>
                    <option value="149">聖剣・聖騎士(ｾｲｹﾝ・ｾｲｷｼ)</option>
                    <option value="287">花札衛（ｶｰﾃﾞｨｱﾝ）</option>
                    <option value="243">超重武者(ちょうじゅうむしゃ)</option>
                    <option value="274">超量(ちょうりょう)</option>
                    <option value="315">閃刀姫(せんとうき)・閃刀(せんとう)</option>
                    <option value="101">陽炎獣(ﾍｲｽﾞﾋﾞｰｽﾄ)</option>
                    <option value="40">雲魔物（ｸﾗｳﾃﾞｨｱﾝ）</option>
                    <option value="51">電池メン</option>
                    <option value="253">霊使い・憑依装着</option>
                    <option value="251">霊獣(れいじゅう)</option>
                    <option value="91">霊神(ﾚｲｼﾝ)</option>
                    <option value="3">霞の谷（ミストバレー）</option>
                    <option value="197">青眼(ブルーアイズ）</option>
                    <option value="81">魔人(ﾏｼﾞﾝ)</option>
                    <option value="321">魔妖(まやかし)</option>
                    <option value="86">魔導書(まどうしょ)</option>
                    <option value="311">魔導獣(マジックビースト)</option>
                    <option value="302">魔弾(まだん)</option>
                    <option value="281">魔界劇団・魔界台本</option>
                    <option value="316">魔神儀(デビリチャル)</option>
                    <option value="264">魔装戦士・イーサルウェポン</option>
                    <option value="9">魔轟神（まごうしん）</option>
                    <option value="42">黒蠍（くろさそり）</option>
                    <option value="158">／(スラッシュ)バスター</option>
                    <option value="306">Ｆ.Ａ.(ﾌｫｰﾐｭﾗｰｱｽﾘｰﾄ)</option>
                    <option value="283">Ｋｏｚｍｏ</option>
                    <option value="270">ＰＳＹ(サイ)フレーム </option>
                    <option value="256">ＲＲ（ﾚｲﾄﾞ・ﾗﾌﾟﾀｰｽﾞ）</option>
                    <option value="304">ＳＰＹＲＡＬ(ｽﾊﾟｲﾗﾙ)</option>
                    <option value="276">Ｕ.Ａ.(ｳﾙﾄﾗｱｽﾘｰﾄ)</option>
                  </select>
                  <select name="data[deck]" id="deck">
                    <option value="">-- 種類 --</option>
                    <option value="1">モンスター</option>
                    <option value="2">魔法</option>
                    <option value="3">罠</option>
                    <option value="4">エクストラ</option>
                  </select>
                  <select name="data[attribute_id]" id="attribute_id">
                    <option value="">-- 属性 --</option>
                    <option value="1">闇</option>
                    <option value="2">光</option>
                    <option value="3">地</option>
                    <option value="4">水</option>
                    <option value="5">炎</option>
                    <option value="6">風</option>
                    <option value="7">神</option>
                  </select>
                  <select name="data[level]" id="level">
                    <option value="">-- レベル --</option>
                    <option value="0">0</option>
                    <option value="1">1</option>
                    <option value="2">2</option>
                    <option value="3">3</option>
                    <option value="4">4</option>
                    <option value="5">5</option>
                    <option value="6">6</option>
                    <option value="7">7</option>
                    <option value="8">8</option>
                    <option value="9">9</option>
                    <option value="10">10</option>
                    <option value="11">11</option>
                    <option value="12">12</option>
                  </select>
                  <select name="data[type]" id="type">
                    <option value="">-- 種族 --</option>
                    <option value="1">悪魔族</option>
                    <option value="2">アンデット族</option>
                    <option value="3">雷族</option>
                    <option value="4">海竜族</option>
                    <option value="5">岩石族</option>
                    <option value="6">機械族</option>
                    <option value="7">恐竜族</option>
                    <option value="8">獣族</option>
                    <option value="9">幻神獣族</option>
                    <option value="10">昆虫族</option>
                    <option value="11">サイキック族</option>
                    <option value="12">魚族</option>
                    <option value="13">植物族</option>
                    <option value="14">獣戦士族</option>
                    <option value="15">戦士族</option>
                    <option value="16">天使族</option>
                    <option value="17">鳥獣族</option>
                    <option value="18">ドラゴン族</option>
                    <option value="19">爬虫類族</option>
                    <option value="20">炎族</option>
                    <option value="21">魔法使い族</option>
                    <option value="22">水族</option>
                    <option value="23">創造神族</option>
                    <option value="24">幻竜族</option>
                    <option value="25">サイバース族</option>
                  </select>
                  <select name="data[limit]" id="limit">
                    <option value="">-- 制限 --</option>
                    <option value="3">無制限</option>
                    <option value="2">準制限</option>
                    <option value="1">制限</option>
                  </select>
                  <br /><br />
                  <input type="text" id="mozi" style="ime-mode: active;" placeholder="カード名称"><br />
                  <input type="text" name="dummy" style="display:none;">
                  <br />
                  <div id="card_list"  align="center"  style="text-align: left;width:100%;font-size:0;" class="green">
                    <p style="font-size:15px;padding:10px;">
                      ＜＜最大50件表示されます＞＞<br /><br />
                      画面表示時、読み込みに時間がかかります。読み込み完了までお待ち下さい。<br />
                      時々、カテゴリの検索にゴミが入っていますが、メンテがしきれないので無視して下さい。
                    </p>
                  </div>
                </div>


                <div id="deck_regist_right">
                  <div class="select_area_pc">
                    <span onclick="select_main();" class="main_edit now_select">メインデッキ編集</span>　
                    <span onclick="select_side();" class="side_edit">サイドデッキ編集</span>
                  </div>
                  <div class="kouka_popup">
                    <div class="kouka_search">
                      作成中のデッキ
                      <span id="tojiru" onclick="$('#deck_regist_right').hide();" class="e_close"> 閉 </span>
                    </div>
                    <div class="kouka_dl">
                      <div style="text-align:right;font-size:150%;margin-top:10px;"><b class='blue' id="deck_total">デッキ／0枚　エクストラ／0枚</b></div>
                      <div style="text-align:right;"></div>
                      <div class="main_deck_area">
                        <div class="title"><div class="div_left">モンスター</div><div class="div_right" id="deck_num_0">0枚</div></div>
                        <div id ="deck_0">
                          <div id="deck_first_0" style="background-color:whitesmoke;height:50px;" class="deck_right_ctgry"></div>
                        </div>
                        <div class="title"><div class="div_left">魔法</div><div class="div_right" id="deck_num_1">0枚</div></div>
                        <div id ="deck_1">
                          <div id="deck_first_1" style="background-color:whitesmoke;height:50px;" class="deck_right_ctgry"></div>
                        </div>
                        <div class="title"><div class="div_left">罠</div><div class="div_right" id="deck_num_2">0枚</div></div>
                        <div id ="deck_2">
                          <div id="deck_first_2" style="background-color:whitesmoke;height:50px;" class="deck_right_ctgry"></div>
                        </div>
                        <div class="title"><div class="div_left">エクストラ</div><div class="div_right" id="deck_num_3">0枚</div></div>
                        <div id ="deck_3">
                          <div id="deck_first_3" style="background-color:whitesmoke;height:50px; border-width:0px 1px 1px 1px;" class="deck_right_ctgry"></div>
                        </div>
                        <div style="text-align:right;font-size:150%;margin-top:10px;"><b class='blue' id="deck_total_side">サイドデッキ／0枚</b></div>
                        <div style="text-align:right;"></div>
                        <div class="title"><div class="div_left">モンスター・魔法・罠</div><div class="div_right" id="deck_num_4">0枚</div></div>
                        <div id ="deck_4" style="background-color:whitesmoke;height:50px;"></div>
                        <div class="title">※ ブラウザバックを行うと編集内容は破棄されます。</div>
                      </div>
                    </div>
                    <div class="select_area_sp">
                      <span onclick="select_main();$('#deck_regist_right').hide();" class="main_edit now_select">メイン編集</span>　
                      <span onclick="select_side();$('#deck_regist_right').hide();" class="side_edit">サイド編集</span>
                    </div>
                  </div>
                </div>
              </div>
              <div id="deck_regist_fotter" onclick="$('#deck_regist_right').show();$('.kouka_popup').show();$('.select_area_sp').show();"><img src="../img/common/memo_icon3.png" alt="メモアイコン" height="14"> 作成中のデッキレシピ</div>
              <br>
            <% end %>
          </div>
        </div>
        <!-- 1カラム -->						<!-- メインコンテンツ １カラム or ２カラム ここまで -->
      </div>
    </div>
  </div>
  <!-- /Main -->

  <!-- Footer -->
  <%= render template: 'layouts/footer' %>

  <!-- Scripts -->
  <script src="/assets/js/jquery.min.js"></script>
  <script src="/assets/js/jquery.dropotron.min.js"></script>
  <!--  <script src="/assets/js/skel.min.js"></script>-->
  <!--  <script src="/assets/js/skel-viewport.min.js"></script>-->
  <script src="/assets/js/util.js"></script>

  <script src="/assets/js/main.js"></script>
  <script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.11.3/jquery-ui.min.js" type="text/javascript"></script>

  <style>
    #deck_regist_area {
      width:100%;
      float:left;
      min-height:500px;
    }
    #deck_regist_left {
      width:50%;
      background-color:white;
      float:left;
      padding-right:15px;
    }
    #deck_regist_right {
      width:50%;
      background-color:white;
      float:left;
    }
    #deck_regist_fotter {
      border-top:2px solid #2d4b4d;
      outline: solid 5px white;
      display:none;
      width:100%;
      background-color: #5f9ea0;
      color: #fff;
      text-align: center;
      padding: 10px 0;
      position: fixed;
      bottom: 0; /*下に固定*/
      left:0;
      cursor:pointer;
    }

    #tojiru {
      display:none;
    }


    div.select_area_pc {
      text-align:center;
      padding:15px;
      font-size:15px;
      margin-bottom:10px;
    }
    div.select_area_pc .main_edit {
      border:1px solid black;
      padding:10px;
      cursor:pointer;
    }
    div.select_area_pc .side_edit {
      border:1px solid black;
      padding:10px;
      cursor:pointer;
    }

    div.select_area_pc span.now_select, div.select_area_sp span.now_select {
      background-color:lightpink;
    }

    div.select_area_sp {
      border-top:2px solid #2d4b4d;
      display:none;
      width:100%;
      background-color: #5f9ea0;
      color: #fff;
      text-align: center;
      padding: 10px 0;
      position: fixed;
      bottom: 0; /*下に固定*/
      left:0;
      cursor:pointer;
    }
    div.select_area_sp .main_edit {
      color:black;
      border:1px solid black;
      padding:10px;
      cursor:pointer;
      background-color: white;
    }
    div.select_area_sp .side_edit {
      color:black;
      border:1px solid black;
      padding:10px;
      cursor:pointer;
      background-color: white;
    }

    @media screen and (max-width: 767px) {
      #deck_regist_area {
        float: none;
        width: 100%;
        margin-right: 0px;
      }
      #deck_regist_left {
        float: none;
        width: 100%;
        margin-right: 0px;
        margin-bottom: 10px;
        padding-right:0px;
      }
      #deck_regist_right {
        float: none;
        width: 100%;
        margin-bottom: 10px;
        display:none;
      }
      #deck_regist_fotter {
        display:block;
        z-index : 30;
      }
      .kouka_popup {
        position:fixed;
        width:100%;
      }
      #tojiru {
        display:block;
      }
      .pc_only {
        display:none;
      }
      div.div_left {
        width: 87%;
      }
      div.div_right {
        width: 13%;
      }
    }




    .kouka_popup {
      border:5px solid black;
      border-radius:5px;
      width:100%;
      background-color:white;
      height:100%;
      /*     display:none; */
      left:25%;
      top:20%;
      box-shadow: 0 0 20px white;
    }
    .kouka_popup div.kouka_search {
      width:100%;
      height:30px;
      border-bottom:3px solid black;
      background-color:black;
      padding-left:10px;
      color:white;
    }
    .kouka_popup div.kouka_search:hover{
    }
    .kouka_popup div.kouka_search span.e_close {
      float:right;
      display:inline-block;
      width:50px;
      text-align:right;
      background-color:gray;
      border-radius:10px;
      text-align:center;
    }
    .kouka_popup div.kouka_search span.e_hanei {
      display:inline-block;
      width:42px;
      text-align:right;
      color:black;
      background-color:linen;
      border-radius:10px;
      border:1px solid black;
      text-align:center;
    }
    .kouka_popup div.kouka_search span.e_clear {
      display:inline-block;
      width:52px;
      text-align:right;
      color:black;
      background-color:linen;
      border-radius:10px;
      border:1px solid black;
      text-align:center;
    }
    .kouka_popup div.kouka_search span:hover {
      cursor:pointer;
      color:black;
      background-color:snow;
    }
    .kouka_popup div.kouka_dl {
      overflow: scroll;
      width:100%;
      height:100%;
      background-color:#fefeee;
    }

    .kouka_popup div.kouka_dl span {
      width:100%;
      background-color:whitesmoke;
      display:inline-block;
      padding:3px;
    }


    b.red {
      color: red;
    }
    b.blue {
      color: blue;
    }
    input#mozi {
      line-height: 30px; /* 文字の高さ */
      margin: 0px; /* 余白を消す */
      background-color: #FFFACD; /* 背景 */
      border: 1px solid #999999; /* 罫線 */
      padding-top: 0px; /* 余白 */
      padding-right: 5px; /* 余白 */
      padding-bottom: 0px; /* 余白 */
      padding-left: 5px; /* 余白 */
      height: 30px; /* 高さ */
      width: 290px; /* 幅 */
    }
    div.green{
      padding:10px 10px 10px 10px;
      border-style : dotted;
      border-width : 2px;
    }
    h3 {
      border-left:20px solid #669999;
      border-right:20px solid #669999;
      padding:3px 0 3px 10px;
      margin-left:13;
      margin-right:13;
      background-color:#ededed;
    }
    .tmp_card {
      background-color: ghostwhite;
      display:inline-block;
      margin: 0px;
      padding:0px;
      width:100%;
      font-size:12px;
    }
    .tmp_card:HOVER {
      background-color: lightpink;
    }
    .mieru {
      font-size:12px;
    }

  </style>



  <!--  <script type="text/javascript">-->
  <!--      <!---->
  <!--      // メインデッキフラグ-->
  <!--      var main_flag = 1;-->

  <!--      // デッキのカードIDを格納する。-->
  <!--      var deckList = new Array();-->

  <!--      // サイドデッキIDを格納-->
  <!--      var sideDeckList = new Array();-->


  <!--      // 最後に更新されたID-->
  <!--      var lastUpdateId = 0;-->
  <!--      var mache = "";-->
  <!--      var mozi = "";-->
  <!--      // 置換したカードリスト-->
  <!--      var c_txt = "";-->
  <!--      var attributeList = {-->
  <!--          1:'闇',2:'光',3:'地',4:'水',5:'炎',6:'風',7:'神'};-->
  <!--      // 種類リスト-->
  <!--      var kindList = {-->
  <!--          100:'モンスターカード',101:'通常モンスター',102:'効果モンスター',103:'融合モンスター',104:'儀式モンスター',105:'シンクロモンスター',106:'エクシーズモンスター',107:'スピリットモンスター',108:'ユニオンモンスター',109:'デュアルモンスター',110:'チューナーモンスター',111:'トゥーンモンスター',112:'ペンデュラムモンスター',113:'リンクモンスター',114:'リバースモンスター',-->
  <!--          200:'魔法',201:'通常',202:'永続',203:'装備',204:'速攻',205:'ﾌｨｰﾙﾄﾞ',206:'儀式',300:'罠',301:'通常',302:'永続',303:'ｶｳﾝﾀｰ'};-->

  <!--      // var kindList = {-->
  <!--      //	100:'モンスターカード',101:'通常モンスター',102:'効果モンスター',103:'融合モンスター',104:'儀式モンスター',105:'シンクロモンスター',106:'エクシーズモンスター',107:'スピリットモンスター',108:'ユニオンモンスター',109:'デュアルモンスター',110:'チューナーモンスター',111:'トゥーンモンスター',112:'ペンデュラムモンスター',113:'リンクモンスター',114:'リバースモンスター',200:'魔法',201:'通常魔法',202:'永続魔法',203:'装備魔法',204:'速攻魔法',205:'フィールド魔法',206:'儀式魔法',300:'罠',301:'通常罠',302:'永続罠',303:'カウンター罠'// };-->
  <!--      // モンスター-->
  <!--      var deck_num_1 = 0;-->
  <!--      // 魔法-->
  <!--      var deck_num_2 = 0;-->
  <!--      // 罠-->
  <!--      var deck_num_3 = 0;-->
  <!--      // エクストラ-->
  <!--      var deck_num_4 = 0;-->
  <!--      // サイドデッキ-->
  <!--      var deck_num_5 = 0;-->

  <!--      function addCardNum(id) {-->
  <!--          if (main_flag == 1) {-->
  <!--              if ($("#card_"+ id + "_num").val() == null || $("#card_"+ id + "_num").val() <= 2) {-->
  <!--                  $("#tmp_card_" + id).html($("#tmp_card_" + id).html() + "★");-->
  <!--              }-->
  <!--          } else {-->
  <!--              if ($("#card_side_"+ id + "_num").val() == null || $("#card_side_"+ id + "_num").val() <= 2) {-->
  <!--                  $("#tmp_card_" + id).html($("#tmp_card_" + id).html() + "□");-->
  <!--              }-->
  <!--          }-->
  <!--      }-->

  <!--      function select_main() {-->
  <!--          main_flag = 1;-->
  <!--          $(".side_edit").removeClass("now_select");-->
  <!--          $(".main_edit").addClass("now_select");-->
  <!--      }-->

  <!--      function select_side() {-->
  <!--          main_flag = 0;-->
  <!--          $(".side_edit").addClass("now_select");-->
  <!--          $(".main_edit").removeClass("now_select");-->
  <!--      }-->


  <!--      // 時限で読み込むタイマーをセット-->
  <!--      window.onload = function() {-->
  <!--          // document.fm.mozi.focus();-->
  <!--          setTimeout('show_list()', 500);-->
  <!--      };-->

  <!--      // 入力から表示する-->
  <!--      function show_list() {-->

  <!--          // 文字が空、または変化していないなら終了-->
  <!--          if (mozi == $('#mozi').val() || "" == $('#mozi').val()) {-->
  <!--              setTimeout('show_list()', 500);-->
  <!--              return false;-->
  <!--          }-->
  <!--          mozi = $('#mozi').val();-->

  <!--          // 一周目のみ-->
  <!--          if (c_txt == "") {-->
  <!--              c_txt = list.join('|');-->
  <!--          }-->

  <!--          var re = new RegExp("[^|]*"+mozi+"[^|]*", "gi");-->
  <!--          mache = c_txt.match(re);-->
  <!--          // カード名をセット-->
  <!--          set_list();-->
  <!--          setTimeout('show_list()', 500);-->
  <!--      }-->

  <!--      // カード名セットメソッド-->
  <!--      function set_list() {-->

  <!--          var textArray = new Array(6);-->
  <!--          textArray[1] = "";-->
  <!--          textArray[2] = "";-->
  <!--          textArray[3] = "";-->
  <!--          textArray[4] = "";-->
  <!--          textArray[5] = "";-->

  <!--          var dispCnt = 0;			// 表示用カウント-->
  <!--          var dispMax = 50;			// 表示最大数-->
  <!--          // 制限が指定されている場合最大表示件数を伸ばす-->
  <!--          if ($('#limit').val() != '') {-->
  <!--              dispMax = 300;-->
  <!--          }-->

  <!--          // カテゴリが指定されている場合・制限が指定されている場合-->
  <!--          if ($('#ctgry').val() != '' || $('#ctgry').val() == 1 || $('#ctgry').val() == 2) {-->
  <!--              dispMax = 999;-->
  <!--          }-->
  <!--          // 文字が入力されている場合-->
  <!--          if ($('#mozi').val() != '') {-->
  <!--              // 1件以上マッチしたとき-->
  <!--              if (mache == "" || mache == null) {-->
  <!--                  text = '<b class="mieru">1件もありませんでした。</b>';-->
  <!--              }-->
  <!--              else {-->
  <!--                  // カードIDを取得する-->
  <!--                  var reNo = new RegExp("[0-9]+＋", "gi");-->

  <!--                  // 最大50件まで数だけループ-->
  <!--                  for (var i = 0;i < mache.length && dispCnt < dispMax;i++) {-->
  <!--                      no = mache[i].match(reNo);-->
  <!--                      tmpMache = mache[i].replace(no, '');-->
  <!--                      no[0] = no[0].replace('＋', '');-->

  <!--                      // IDの中身をチェック-->
  <!--                      if (!checkCard(no[0])) {-->
  <!--                          continue;-->
  <!--                      }-->
  <!--                      plusTxt = "　<a class='tmp_card' id='tmp_card_"+ no[0] +"' href='#' onclick='addCardNum(" + no[0] + ");addCard(" + no[0] + ");return false;'>" + tmpMache.replace(mozi, "<b class='red'>" + mozi + "</b>") + "</a>";-->
  <!--                      var deckId = cardIdList[no[0]]['D'];-->
  <!--                      textArray[deckId] = textArray[deckId] + plusTxt;-->
  <!--                      dispCnt++;-->
  <!--                  }-->
  <!--              }-->
  <!--          } else {-->
  <!--              // カードリスト走破-->
  <!--              for (var i = 0;i < cardIds.length && dispCnt < dispMax;i++) {-->
  <!--                  // 条件に当てはまる場合-->
  <!--                  if (checkCard(cardIds[i])) {-->
  <!--                      plusTxt = "　<a class='tmp_card' id='tmp_card_"+ cardIds[i] +"' href='#' onclick='addCardNum(" + cardIds[i] + ");addCard(" + cardIds[i] + ");return false;'>" + cardIdList[cardIds[i]]['N'] + "</a><br />";-->
  <!--                      textArray[cardIdList[cardIds[i]]['D']] = textArray[cardIdList[cardIds[i]]['D']] + plusTxt;-->
  <!--                      dispCnt++;-->
  <!--                  }-->
  <!--              }-->
  <!--          }-->
  <!--          if (textArray[1].length != '') {-->
  <!--              textArray[1] = '<b class="mieru">【モンスター】</b><br />' + textArray[1];-->
  <!--          }-->
  <!--          if (textArray[2].length != '') {-->
  <!--              textArray[2] = '<b class="mieru">【魔法】</b><br />' + textArray[2];-->
  <!--          }-->
  <!--          if (textArray[3].length != '') {-->
  <!--              textArray[3] = '<b class="mieru">【罠】</b><br />' + textArray[3];-->
  <!--          }-->
  <!--          if (textArray[4].length != '') {-->
  <!--              textArray[4] = '<b class="mieru">【エクストラ】</b><br />' + textArray[4];-->
  <!--          }-->
  <!--          if (textArray[5].length != '') {-->
  <!--              textArray[5] = '<b class="mieru">【サイドデッキ】</b><br />' + textArray[5];-->
  <!--          }-->
  <!--          // 1件以上マッチしたとき-->
  <!--          if ((textArray[1] + textArray[2] + textArray[3] + textArray[4]).length == '') {-->
  <!--              $('#card_list').html('<b class="mieru">1件もありませんでした。</b>');-->
  <!--          } else {-->
  <!--              $('#card_list').html(textArray[1] + textArray[2] + textArray[3] + textArray[4]);-->
  <!--          }-->
  <!--      }-->

  <!--      // 指定のカードIDが現在の件削除条件を満たすかをチェック-->
  <!--      // return true:正しい false:間違い-->
  <!--      function checkCard(cardId) {-->
  <!--          // レベルが指定されて違う場合-->
  <!--          if ($('#level').val() != '' && cardIdList[cardId]['L'] != $('#level').val()) {-->
  <!--              return false;-->
  <!--          }-->
  <!--          // 属性が指定されて違う場合-->
  <!--          if ($('#attribute_id').val() != '' && cardIdList[cardId]['A'] != $('#attribute_id').val()) {-->
  <!--              return false;-->
  <!--          }-->
  <!--          // 種族が指定されて違う場合-->
  <!--          if ($('#type').val() != '' && cardIdList[cardId]['T'] != $('#type').val()) {-->
  <!--              return false;-->
  <!--          }-->
  <!--          // 制限が指定されている場合-->
  <!--          if ($('#limit').val() != '' && cardIdList[cardId]['LN'] != $('#limit').val()) {-->
  <!--              return false;-->
  <!--          }-->
  <!--          // デッキが指定されている場合-->
  <!--          if ($('#deck').val() != '' && cardIdList[cardId]['D'] != $('#deck').val()) {-->
  <!--              return false;-->
  <!--          }-->
  <!--          // カテゴリが指定されている場合-->
  <!--          if ($('#ctgry').val() != '') {-->
  <!--              var flg = false;-->
  <!--              // カテゴリでループする-->
  <!--              for (var p = 0;p < cardDataCtgry[$('#ctgry').val()].length;p++) {-->
  <!--                  // カードがカテゴリに存在した場合-->
  <!--                  if (cardId == cardDataCtgry[$('#ctgry').val()][p]) {-->
  <!--                      flg = true;-->
  <!--                      break;-->
  <!--                  }-->
  <!--              }-->
  <!--              if (flg == false) {-->
  <!--                  return false;-->
  <!--              }-->
  <!--          }-->
  <!--          return true;-->
  <!--      }-->

  <!--      // クリックしたカードを最大３枚まで追加する-->
  <!--      function addCard (id) {-->
  <!--          if (main_flag == 1) {-->
  <!--              var oyaNode = document.getElementById('deck_' + cardIdList[id]['D']);-->
  <!--              // まだデッキに１枚も存在していない場合-->
  <!--              if ($('#div_' + id).val() == null) {-->
  <!--                  var element = document.createElement('div');-->
  <!--                  element.id = "div_" + id;-->
  <!--                  // 種類ごとに生成して返す。-->
  <!--                  element.innerHTML = createHtml(id);-->
  <!--                  element.className = "deck_card_sotowaku";-->
  <!--                  element.style.borderLeft = "solid 10px " + getCss(cardIdList[id]['S']);-->
  <!--                  oyaNode.appendChild(element);-->
  <!--                  // デッキにIDを追加-->
  <!--                  deckList.push(id);-->
  <!--              } else {-->
  <!--                  var card_id_num = parseInt($('#card_' + id + '_num').val());-->
  <!--                  // 3枚以下の場合 ※ 制限枚数まではやめた-->
  <!--                  if (card_id_num < 3) {-->
  <!--                      //if (card_id_num < cardIdList[id]['LN']) {-->
  <!--                      $('#card_' + id + '_num').val(card_id_num + 1)-->
  <!--                  }-->
  <!--              }-->
  <!--          } else {-->
  <!--              var oyaNode = document.getElementById('deck_5');-->
  <!--              // サイドデッキにIDを追加-->
  <!--              // まだデッキに１枚も存在していない場合-->
  <!--              if ($('#div_side_' + id).val() == null) {-->
  <!--                  var element = document.createElement('div');-->
  <!--                  element.id = "div_side_" + id;-->
  <!--                  // 種類ごとに生成して返す。-->
  <!--                  element.innerHTML = createHtml(id);-->
  <!--                  element.className = "deck_card_sotowaku";-->
  <!--                  element.style.borderLeft = "solid 10px " + getCss(cardIdList[id]['S']);-->
  <!--                  oyaNode.appendChild(element);-->
  <!--                  // サイドデッキにIDを追加-->
  <!--                  sideDeckList.push(id);-->
  <!--              } else {-->
  <!--                  var card_id_num = parseInt($('#card_side_' + id + '_num').val());-->
  <!--                  // 3枚以下の場合 ※ 制限枚数まではやめた-->
  <!--                  if (card_id_num < 3) {-->
  <!--                      //if (card_id_num < cardIdList[id]['LN']) {-->
  <!--                      $('#card_side_' + id + '_num').val(card_id_num + 1)-->
  <!--                  }-->
  <!--              }-->
  <!--          }-->
  <!--          // 枚数をカウントする-->
  <!--          countDeck(id);-->
  <!--          newOperation(id);-->
  <!--          return false;-->
  <!--      }-->

  <!--      // カードを１枚へらす、０枚になる時は警告を出す-->
  <!--      function deleteCard(id) {-->
  <!--          if (main_flag == 1) {-->
  <!--              // 数を取得-->
  <!--              if ($('#card_' + id + '_num').val() == 1) {-->
  <!--                  if(window.confirm(cardIdList[id]['N'] + 'をデッキから削除します。')){-->
  <!--                      var oOyaNode = $('#deck_' + cardIdList[id]['D']);-->
  <!--                      $('#div_' + id).remove();-->
  <!--                      // デッキからIDを削除-->
  <!--                      for (var i = 0;i < deckList.length;i++) {-->
  <!--                          if (deckList[i] == id) {-->
  <!--                              deckList.splice(i, 1);-->
  <!--                              i--;-->
  <!--                          }-->
  <!--                      }-->
  <!--                      // 枚数をカウントする-->
  <!--                      countDeck();-->
  <!--                  }-->
  <!--              } else {-->
  <!--                  // 1枚へらす-->
  <!--                  $('#card_' + id + '_num').val(parseInt($('#card_' + id + '_num').val()) - 1);-->
  <!--                  // 枚数をカウントする-->
  <!--                  countDeck();-->
  <!--                  newOperation(id);-->
  <!--              }-->
  <!--          } else {-->
  <!--              // 数を取得-->
  <!--              if ($('#card_side_' + id + '_num').val() == 1) {-->
  <!--                  if(window.confirm(cardIdList[id]['N'] + 'をサイドデッキから削除します。')){-->
  <!--                      var oOyaNode = $('#deck_side_' + cardIdList[id]['D']);-->
  <!--                      $('#div_side_' + id).remove();-->
  <!--                      // デッキからIDを削除-->
  <!--                      for (var i = 0;i < sideDeckList.length;i++) {-->
  <!--                          if (sideDeckList[i] == id) {-->
  <!--                              sideDeckList.splice(i, 1);-->
  <!--                              i--;-->
  <!--                          }-->
  <!--                      }-->
  <!--                      // 枚数をカウントする-->
  <!--                      countDeck();-->
  <!--                  }-->
  <!--              } else {-->
  <!--                  // 1枚へらす-->
  <!--                  $('#card_side_' + id + '_num').val(parseInt($('#card_side_' + id + '_num').val()) - 1);-->
  <!--                  // 枚数をカウントする-->
  <!--                  countDeck();-->
  <!--                  newOperation(id);-->
  <!--              }-->
  <!--          }-->
  <!--          return false;-->
  <!--      }-->

  <!--      function addMainCard(id) {-->
  <!--          var tmp_main_flag = main_flag;-->
  <!--          main_flag = 1;-->
  <!--          addCard(id);-->
  <!--          main_flag = tmp_main_flag;-->
  <!--      }-->

  <!--      function deleteMainCard(id) {-->
  <!--          var tmp_main_flag = main_flag;-->
  <!--          main_flag = 1;-->
  <!--          deleteCard(id);-->
  <!--          main_flag = tmp_main_flag;-->
  <!--      }-->

  <!--      function addSideCard(id) {-->
  <!--          var tmp_main_flag = main_flag;-->
  <!--          main_flag = 0;-->
  <!--          addCard(id);-->
  <!--          main_flag = tmp_main_flag;-->
  <!--      }-->

  <!--      function deleteSideCard(id) {-->
  <!--          var tmp_main_flag = main_flag;-->
  <!--          main_flag = 0;-->
  <!--          deleteCard(id);-->
  <!--          main_flag = tmp_main_flag;-->
  <!--      }-->

  <!--      // カードの行を生成する。-->
  <!--      function createHtml(id) {-->
  <!--          var text = "";-->
  <!--          var add_function_name = "addMainCard";-->
  <!--          var delete_function_name = "deleteMainCard";-->
  <!--          var settougo = "card_";-->
  <!--          var settougo_name = "";-->
  <!--          if (main_flag == 0) {-->
  <!--              add_function_name = "addSideCard";-->
  <!--              delete_function_name = "deleteSideCard";-->
  <!--              settougo = "card_side_";-->
  <!--              settougo_name = "side_";-->
  <!--          }-->
  <!--          // モンスター-->
  <!--          if (cardIdList[id]['D'] == 1 || cardIdList[id]['D'] == 4) {-->
  <!--              text = "<div class='div_left' ><input type='text' name=\""+ settougo_name + id +"\" value='1' maxlength='1' size='2px' id='" + settougo + id +"_num' readonly='readonly' />枚　<a href='/c_dtls/index/" + id + "' target='_blank'>" + cardIdList[id]['N'] + '</a><br /></div><div class="div_right"><font class="pc_only">' + attributeList[cardIdList[id]['A']] + '' + ("-" + cardIdList[id]['L']).slice(-2) + '　' + "</font><a href='#' onclick='"+delete_function_name+"(" + id + ");return false;'>" +'▽</a>' + ' ' + "<a href='#' onclick='"+add_function_name+"(" + id + ");return false;'>" +'▲</a><br clear="all"></div>';-->
  <!--          }-->
  <!--          // 魔法・罠-->
  <!--          else {-->
  <!--              text = "<div class='div_left' ><input type='text' name=\""+ settougo_name +id +"\" value='1' maxlength='1' size='2px' id='" + settougo + id +"_num' readonly='readonly'>枚　<a href='/c_dtls/index/" + id + "' target='_blank'>" + cardIdList[id]['N'] + '</a></div><div class="div_right"><font class="pc_only">' + kindList[cardIdList[id]['S']] + '　' + "</font><a href='#' onclick='"+delete_function_name+"(" + id + ");return false;'>" +'▽</a>' + "<a href='#' onclick='"+add_function_name+"(" + id + ");return false;'>" +'▲</a><br clear="all"></div>';-->
  <!--          }-->
  <!--          return text;-->
  <!--      }-->

  <!--      // 最後に更新したものを目立たせる-->
  <!--      function newOperation(id) {-->
  <!--          $('.deck_card_sotowaku').css('background-color', '#ffffff');-->
  <!--          if (main_flag == 1) {-->
  <!--              if ($('#div_' + id) != null) {-->
  <!--                  $('#div_' + id).css('background-color', '#ffcccc');-->
  <!--              }-->
  <!--          } else {-->
  <!--              if ($('#div_side_' + id) != null) {-->
  <!--                  $('#div_side_' + id).css('background-color', '#ffcccc');-->
  <!--              }-->
  <!--          }-->
  <!--          lastUpdateId = id;-->
  <!--      }-->

  <!--      // 枚数をカウントする-->
  <!--      function countDeck() {-->
  <!--          var countList = new Array();-->
  <!--          countList[1] = 0;-->
  <!--          countList[2] = 0;-->
  <!--          countList[3] = 0;-->
  <!--          countList[4] = 0;-->
  <!--          countList[5] = 0;-->
  <!--          // 数える-->
  <!--          for (var i = 0;i < deckList.length;i++) {-->
  <!--              countList[cardIdList[deckList[i]]['D']] = parseInt(countList[cardIdList[deckList[i]]['D']]) + parseInt($('#card_' + deckList[i] + "_num").val());-->
  <!--          }-->
  <!--          for (var i = 0;i < sideDeckList.length;i++) {-->
  <!--              countList[5] = parseInt(countList[5]) + parseInt($('#card_side_' + sideDeckList[i] + "_num").val());-->
  <!--          }-->
  <!--          // 反映する-->
  <!--          $("#deck_num_1").html(countList[1] + "枚");-->
  <!--          $("#deck_num_2").html(countList[2] + "枚");-->
  <!--          $("#deck_num_3").html(countList[3] + "枚");-->
  <!--          $("#deck_num_4").html(countList[4] + "枚");-->
  <!--          $("#deck_num_5").html(countList[5] + "枚");-->
  <!--          deck_num_1 = countList[1];-->
  <!--          deck_num_2 = countList[2];-->
  <!--          deck_num_3 = countList[3];-->
  <!--          deck_num_4 = countList[4];-->
  <!--          deck_num_5 = countList[5];-->
  <!--          var total = parseInt(countList[1]) +  parseInt(countList[2]) +  parseInt(countList[3]);-->
  <!--          for (var i = 1;i <= 4;i++) {-->
  <!--              if (countList[i] == 0) {-->
  <!--                  $("#deck_first_" + i).show();-->
  <!--              } else {-->
  <!--                  $("#deck_first_" + i).hide();-->
  <!--              }-->
  <!--          }-->
  <!--          $("#deck_total").html("デッキ／" + total + "枚　エクストラ／" + countList[4] + "枚");-->
  <!--          $("#deck_total_side").html("サイドデッキ／" + parseInt(countList[5]) + "枚");-->
  <!--      }-->

  <!--      // 色を取得する-->
  <!--      function getCss(kindId){-->
  <!--          if (kindId == 101) {-->
  <!--              return '#FAEBD7';-->
  <!--          }-->
  <!--          else if (kindId == 102) {-->
  <!--              return '#DEB887';-->
  <!--          }-->
  <!--          else if (kindId == 103) {-->
  <!--              return '#cc99ff';-->
  <!--          }-->
  <!--          else if (kindId == 104) {-->
  <!--              return '#a4bdff';-->
  <!--          }-->
  <!--          else if (kindId == 105) {-->
  <!--              return '#FFFFFF';-->
  <!--          }-->
  <!--          else if (kindId == 106) {-->
  <!--              return '#000000';-->
  <!--          }-->
  <!--          else if (kindId == 112) {-->
  <!--              return '#2e8b57';-->
  <!--          }-->
  <!--          else if (kindId == 113) {-->
  <!--              return 'cornflowerblue';-->
  <!--          }-->
  <!--          else if (200 <= kindId && kindId < 300) {-->
  <!--              return '#8FBC8F';-->
  <!--          } else if (300 <= kindId) {-->
  <!--              return '#d0afee';-->
  <!--          } else {-->
  <!--              return '';-->
  <!--          }-->
  <!--      }-->

  <!--      // 書き出しDO-->
  <!--      function writeDeckDo() {-->
  <!--          var text = "デッキをデュエルオンライン的に書き出し↓↓<br /><br />";-->
  <!--          var mo = "モンスター(" + deck_num_1 + ")枚<br />";-->
  <!--          var ma = "<br />魔法(" + deck_num_2 + ")枚<br />";-->
  <!--          var tr = "<br />罠(" + deck_num_3 + ")枚<br />";-->
  <!--          var ex = "<br />エクストラ<br />";-->
  <!--          var si = "<br />サイドデッキ<br />";-->
  <!--          // デッキリストから順に書き出す。-->
  <!--          for (var i = 0;i < deckList.length;i++) {-->
  <!--              var num = "";-->
  <!--              // 1でない-->
  <!--              if (parseInt($('#card_' + deckList[i] + "_num").val()) > 1) {-->
  <!--                  num = '×' + $('#card_' + deckList[i] + "_num").val() + '枚';-->
  <!--              }-->
  <!--              if (cardIdList[deckList[i]]['D'] == 1) {-->
  <!--                  mo = mo + cardIdList[deckList[i]]['N'] + num +'<br />';-->
  <!--              } else if(cardIdList[deckList[i]]['D'] == 2) {-->
  <!--                  ma = ma + cardIdList[deckList[i]]['N'] + num +'<br />';-->
  <!--              } else if(cardIdList[deckList[i]]['D'] == 3) {-->
  <!--                  tr = tr + cardIdList[deckList[i]]['N'] + num +'<br />';-->
  <!--              } else if(cardIdList[deckList[i]]['D'] == 4) {-->
  <!--                  ex = ex + cardIdList[deckList[i]]['N'] + num +'<br />';-->
  <!--              } else {-->
  <!--                  si = si + cardIdList[deckList[i]]['N'] + num +'<br />';-->
  <!--              }-->
  <!--          }-->
  <!--          text = text + mo + ma + tr + ex;-->
  <!--          $('#card_list').html("<p class='mieru'>" + text + "</p>");-->
  <!--      }-->

  <!--      // 書き出しwiki-->
  <!--      function writeDeck() {-->
  <!--          var text = "デッキをWiki的に書き出し↓↓<br /><br />";-->
  <!--          var mo = "■モンスター(" + deck_num_1 + ")枚<br />";-->
  <!--          var ma = "<br />■魔法(" + deck_num_2 + ")枚<br />";-->
  <!--          var tr = "<br />■罠(" + deck_num_3 + ")枚<br />";-->
  <!--          var ex = "<br />■エクストラ(" + deck_num_4 + ")枚<br />";-->
  <!--          var si = "<br />■サイドデッキ(" + deck_num_5 + ")枚<br />";-->
  <!--          // デッキリストから順に書き出す。-->
  <!--          for (var i = 0;i < deckList.length;i++) {-->
  <!--              if (cardIdList[deckList[i]]['D'] == 1) {-->
  <!--                  mo = mo + parseInt($('#card_' + deckList[i] + "_num").val()) + '枚 《' +  cardIdList[deckList[i]]['N'] + '》<br />';-->
  <!--              } else if(cardIdList[deckList[i]]['D'] == 2) {-->
  <!--                  ma = ma + parseInt($('#card_' + deckList[i] + "_num").val()) + '枚 《' +  cardIdList[deckList[i]]['N'] + '》<br />';-->
  <!--              } else if(cardIdList[deckList[i]]['D'] == 3) {-->
  <!--                  tr = tr + parseInt($('#card_' + deckList[i] + "_num").val()) + '枚 《' +  cardIdList[deckList[i]]['N'] + '》<br />';-->
  <!--              } else if(cardIdList[deckList[i]]['D'] == 4) {-->
  <!--                  ex = ex + parseInt($('#card_' + deckList[i] + "_num").val()) + '枚 《' +  cardIdList[deckList[i]]['N'] + '》<br />';-->
  <!--              } else {-->
  <!--                  si = si + parseInt($('#card_' + deckList[i] + "_num").val()) + '枚 《' +  cardIdList[deckList[i]]['N'] + '》<br />';-->
  <!--              }-->
  <!--          }-->
  <!--          text = text + mo + ma + tr + ex + si;-->
  <!--          $('#card_list').html("<p class='mieru'>" + text + "</p>");-->
  <!--      }-->

  <!--      // 書き出しCGI-->
  <!--      function writeDeckCgi() {-->
  <!--          var text = "デッキをCGI的に書き出し↓↓<br /><br />";-->
  <!--          // デッキリストから順に書き出す。-->
  <!--          for (var i = 0;i < deckList.length;i++) {-->
  <!--              var value = $('#card_' + deckList[i] + "_num").val();-->
  <!--              for (var p = 0;p < value;p++) {-->
  <!--                  text = text + cardIdList[deckList[i]]['N'] + '<br />';-->
  <!--              }-->
  <!--          }-->
  <!--          $('#card_list').html("<p class='mieru'>" + text + "</p>");-->
  <!--      }-->

  <!--      // 書き出し5DB's-->
  <!--      function writeDeck5DB() {-->
  <!--          var text = "このサイトへのリンク付き書き出し↓↓<br />ブログとかにコピペしてね！<br /><br />";-->
  <!--          var mo = "■モンスター(" + deck_num_1 + ")枚<br />";-->
  <!--          var ma = "<br />■魔法(" + deck_num_2 + ")枚<br />";-->
  <!--          var tr = "<br />■罠(" + deck_num_3 + ")枚<br />";-->
  <!--          var ex = "<br />■エクストラ(" + deck_num_4 + ")枚<br />";-->
  <!--          var si = "<br />■サイドデッキ(" + deck_num_5 + ")枚<br />";-->
  <!--          // デッキリストから順に書き出す。-->
  <!--          for (var i = 0;i < deckList.length;i++) {-->
  <!--              if (cardIdList[deckList[i]]['D'] == 1) {-->
  <!--                  mo = mo + parseInt($('#card_' + deckList[i] + "_num").val()) + '枚 <a href=\'https://yugioh-list.com/c_dtls/index/' + deckList[i] +'\'>' +  cardIdList[deckList[i]]['N'] + '</a><br />';-->
  <!--              } else if(cardIdList[deckList[i]]['D'] == 2) {-->
  <!--                  ma = ma + parseInt($('#card_' + deckList[i] + "_num").val()) + '枚 <a href=\'https://yugioh-list.com/c_dtls/index/' + deckList[i] +'\'>' +  cardIdList[deckList[i]]['N'] + '</a><br />';-->
  <!--              } else if(cardIdList[deckList[i]]['D'] == 3) {-->
  <!--                  tr = tr + parseInt($('#card_' + deckList[i] + "_num").val()) + '枚 <a href=\'https://yugioh-list.com/c_dtls/index/' + deckList[i] +'\'>' +  cardIdList[deckList[i]]['N'] + '</a><br />';-->
  <!--              } else if(cardIdList[deckList[i]]['D'] == 4) {-->
  <!--                  ex = ex + parseInt($('#card_' + deckList[i] + "_num").val()) + '枚 <a href=\'https://yugioh-list.com/c_dtls/index/' + deckList[i] +'\'>' +  cardIdList[deckList[i]]['N'] + '</a><br />';-->
  <!--              } else {-->
  <!--                  si = si + parseInt($('#card_' + deckList[i] + "_num").val()) + '枚 <a href=\'https://yugioh-list.com/c_dtls/index/' + deckList[i] +'\'>' +  cardIdList[deckList[i]]['N'] + '</a><br />';-->
  <!--              }-->
  <!--          }-->
  <!--          text = text + '<textarea rows="30" cols="30">' + mo + ma + tr + ex + si + '</textarea>';-->
  <!--          $('#card_list').html(text);-->
  <!--      }-->

  <!--      // チェックして送信-->
  <!--      function checkSubmit() {-->
  <!--          if (true) {-->
  <!--              alert("デッキ登録を行いたい場合はユーザ登録を行い、ログインして下さい。");-->
  <!--          }-->
  <!--          // デッキ枚数エラー-->
  <!--          else if (!((deck_num_1 + deck_num_2 + deck_num_3) >= 40 && (deck_num_1 + deck_num_2 + deck_num_3) <= 60)) {-->
  <!--              alert('デッキは40枚以上、60枚以下にしてください。');-->
  <!--          } else if (deck_num_4 > 15) {-->
  <!--              alert('エクストラデッキは15枚以下にしてください。');-->
  <!--          } else {-->
  <!--              document.fm.submit();-->
  <!--          }-->
  <!--      }-->
  <!--      // -->-->
  <!--  </script>-->

  <script type="text/javascript">
      var cardIdList = [];
      var resultList = null;

      // デッキのカードIDを格納する。
      var deckList = new Array();

      // サイドデッキIDを格納
      var sideDeckList = new Array();

      var lastUpdateId = 0;
      var mache = "";
      var mozi = "";
      // 置換したカードリスト
      var c_txt = "";
      var attributeList = {
          1:'闇',2:'光',3:'地',4:'水',5:'炎',6:'風',7:'神'};
      // 種類リスト
      var kindList = {
          100:'モンスターカード',101:'通常モンスター',102:'効果モンスター',103:'融合モンスター',104:'儀式モンスター',105:'シンクロモンスター',106:'エクシーズモンスター',107:'スピリットモンスター',108:'ユニオンモンスター',109:'デュアルモンスター',110:'チューナーモンスター',111:'トゥーンモンスター',112:'ペンデュラムモンスター',113:'リンクモンスター',114:'リバースモンスター',
          200:'魔法',201:'通常',202:'永続',203:'装備',204:'速攻',205:'ﾌｨｰﾙﾄﾞ',206:'儀式',300:'罠',301:'通常',302:'永続',303:'ｶｳﾝﾀｰ'};

      // var kindList = {
      //	100:'モンスターカード',101:'通常モンスター',102:'効果モンスター',103:'融合モンスター',104:'儀式モンスター',105:'シンクロモンスター',106:'エクシーズモンスター',107:'スピリットモンスター',108:'ユニオンモンスター',109:'デュアルモンスター',110:'チューナーモンスター',111:'トゥーンモンスター',112:'ペンデュラムモンスター',113:'リンクモンスター',114:'リバースモンスター',200:'魔法',201:'通常魔法',202:'永続魔法',203:'装備魔法',204:'速攻魔法',205:'フィールド魔法',206:'儀式魔法',300:'罠',301:'通常罠',302:'永続罠',303:'カウンター罠'// };
      // モンスター
      var deck_num_0 = 0;
      // 魔法
      var deck_num_1 = 0;
      // 罠
      var deck_num_2 = 0;
      // エクストラ
      var deck_num_3 = 0;
      // サイドデッキ
      var deck_num_4 = 0;

      var deck_category = '';
      var deck_type = '';
      var deck_attribute = '';
      var deck_level = '';
      var deck_tribe = '';
      var deck_restriction = '';
      var deck_keyword = '';

      function diffArray(arr1, arr2) {
          return arr1.concat(arr2)
              .filter(item => !arr1.includes(item) || !arr2.includes(item));
      }

      //デッキカテゴリ
      $('#ctgry').change(function() {
          deck_category = $('#ctgry option:selected').val();
          console.log(deck_category);
          set_list();
      });

      //種類　モンスター　魔法　罠　エクストラ
      $('#deck').change(function() {
          deck_type = $('#deck option:selected').val();
          console.log(deck_type);
          set_list();
      });

      //属性
      $('#attribute_id').change(function() {
          deck_attribute = $('#attribute_id option:selected').val();
          console.log(deck_attribute);
          set_list();
      });

      //レベル
      $('#level').change(function() {
          deck_level = $('#level option:selected').val();
          console.log(deck_level);
          set_list();
      });

      //種族
      $('#type').change(function() {
          deck_tribe = $('#type option:selected').val();
          console.log(deck_tribe);
          set_list();
      });

      //制限など　無制限　準制限　制限
      $('#limit').change(function() {
          deck_restriction = $('#limit option:selected').val();
          console.log(deck_restriction);
          set_list();
      });

      //キーワード
      $('#mozi').on({"input" : function(e) {
              deck_keyword = $(this).val();
              set_list();
          }});

      function set_list(){
          // 入力時の処理
          var send_url = "/ajax/cards";
          var data = {};
          //キーワード
          data.deck_keyword = deck_keyword;
          //カテゴリ
          data.deck_category = deck_category;
          //種類
          data.deck_type = deck_type;
          //属性
          data.deck_attribute = deck_attribute;
          //レベル
          data.deck_level = deck_level;
          //種族
          data.deck_tribe = deck_tribe;
          //制限
          data.deck_restriction = deck_restriction;

          console.log(data);

          $.ajax({
              type: "POST",
              url: send_url,
              dataType: 'json',
              data: {cards_search_form: data},
              success: function (result) {
                  console.log(result);
                  resultList = result;
                  var connection = $('#connection');

                  if (result.status == 200) {

                      if (result.data.length == 0) {
                          $('#card_list').html('<b class="mieru">1件もありませんでした。</b>');
                      } else {
                          //初期化
                          $('#card_list').html('');
                          var monster = true;
                          var magic = true;
                          var trap = true;
                          var extra = true;
                          var count = 0;

                          result.data.sort(function(a, b) {return a.type > b.type ? 1 : -1}).forEach(function(v,i,a){
                              var namePlate = '';
                              if (monster && v.type == 0){
                                  namePlate = '<b class="mieru">【モンスター】</b><br />';
                                  monster = false;
                              }else if(magic && v.type == 1){
                                  namePlate = '<b class="mieru">【魔法】</b><br />';
                                  magic = false;
                              }else if(trap && v.type == 2){
                                  namePlate = '<b class="mieru">【罠】</b><br />';
                                  trap = false;
                              }else if(extra && v.type == 3){
                                  namePlate = '<b class="mieru">【エクストラ】</b><br />';
                                  extra = false;
                              }
                              //'<b class="mieru">【サイドデッキ】</b><br />'
                              var indexOf = v.name.toUpperCase().indexOf(deck_keyword.toUpperCase());
                              var replaced = indexOf !== -1 ? v.name.replace(v.name.substr(indexOf, deck_keyword.length), "<b class='red'>" + deck_keyword + "</b>") : v.name;
                              $('#card_list').append(namePlate + "<a class='tmp_card' id='tmp_card_"+ v.id +"' onclick='addCardNum(" + v.id + ");addCard(" + v.id + ");return false;'>" + replaced + "</a>");
                              cardIdList.push({id: v.id, name: v.name, attribute_id: v.attribute_id, effect: v.effect, level: v.level, type: v.type})
                          });
                          console.log(cardIdList)
                      }
                  }else{
                      alert('取得できませんでした');
                  }
              },
              error: function (XMLHttpRequest, textStatus, errorThrown) {
                  console.log(XMLHttpRequest);
              }
          });
      }

      var main_flag = 1;

      function addCardNum(id) {
          if (main_flag == 1) {
              if ($("#card_"+ id + "_num").val() == null || $("#card_"+ id + "_num").val() <= 2) {
                  $("#tmp_card_" + id).html($("#tmp_card_" + id).html() + "★");
              }
          } else {
              if ($("#card_side_"+ id + "_num").val() == null || $("#card_side_"+ id + "_num").val() <= 2) {
                  $("#tmp_card_" + id).html($("#tmp_card_" + id).html() + "□");
              }
          }
      }

      function deleteCardNum(id) {
          var oya = resultList.data.map(x => x.id == id ? x : null).filter(x => x)[0];
          console.log(oya.count);
          if (main_flag == 1) {
              if ($("#card_"+ id + "_num").val() != null) {
                  $("#tmp_card_" + id).html($("#tmp_card_" + id).html().replace("★".repeat(oya.count), '') + "★".repeat(oya.count-1));
              }
          } else {
              if ($("#card_side_"+ id + "_num").val() != null) {
                  $("#tmp_card_" + id).html($("#tmp_card_" + id).html().replace("□".repeat(oya.count), '') + "□".repeat(oya.count-1));
              }
          }
      }

      function addCard (id) {
          if (main_flag == 1) {

              var oya = resultList.data.map(x => x.id == id ? x : null).filter(x => x)[0];
              // まだデッキに１枚も存在していない場合
              if ($('#div_' + id).val() == null) {
                  var oyaNode = document.getElementById('deck_' + oya.type);

                  var element = document.createElement('div');
                  element.id = "div_" + id;
                  // 種類ごとに生成して返す。
                  element.innerHTML = createHtml(id);
                  element.className = "deck_card_sotowaku";
                  element.style.borderLeft = "solid 10px " + getCss(oya.type);
                  oyaNode.appendChild(element);
                  // デッキにIDを追加
                  oya.count = 1;
                  deckList.push(oya);
              } else {
                  var card_id_num = parseInt($('#card_' + id + '_num').val());
                  // 3枚以下の場合 ※ 制限枚数まではやめた
                  if (card_id_num < 3) {
                      deckList.find(x => x.id === id).count++;
                      //if (card_id_num < cardIdList[id]['LN']) {
                      $('#card_' + id + '_num').val(card_id_num + 1)
                  }
              }
          } else {
              var oya = resultList.data.map(x => x.id == id ? x : null).filter(x => x)[0];
              var oyaNode = document.getElementById('deck_4');
              // サイドデッキにIDを追加
              // まだデッキに１枚も存在していない場合
              if ($('#div_side_' + id).val() == null) {
                  var element = document.createElement('div');
                  element.id = "div_side_" + id;
                  // 種類ごとに生成して返す。
                  element.innerHTML = createHtml(id);
                  element.className = "deck_card_sotowaku";
                  element.style.borderLeft = "solid 10px " + getCss(oya.type);
                  oyaNode.appendChild(element);
                  // サイドデッキにIDを追加
                  oya.count = 1;
                  oya.type = 4;
                  sideDeckList.push(oya);
              } else {
                  var card_id_num = parseInt($('#card_side_' + id + '_num').val());
                  // 3枚以下の場合 ※ 制限枚数まではやめた
                  if (card_id_num < 3) {
                      sideDeckList.find(x => x.id === id).count++;
                      //if (card_id_num < cardIdList[id]['LN']) {
                      $('#card_side_' + id + '_num').val(card_id_num + 1)
                  }
              }
          }
          // 枚数をカウントする
          countDeck(id);
          newOperation(id);

          return false;
      }

      // カードを１枚へらす、０枚になる時は警告を出す
      function deleteCard(id) {
          var oya = resultList.data.map(x => x.id == id ? x : null).filter(x => x)[0];
          if (main_flag == 1) {
              // 数を取得
              if ($('#card_' + id + '_num').val() == 1) {
                  if(window.confirm(oya.name + 'をデッキから削除します。')){
                      // var oOyaNode = $('#deck_' + oya.type);
                      $('#div_' + id).remove();
                      // デッキからIDを削除
                      deckList = deckList.filter(x => x.id === id);

                      // 枚数をカウントする
                      countDeck();
                  }
              } else {
                  // 1枚へらす
                  oya.count--;
                  $('#card_' + id + '_num').val(parseInt($('#card_' + id + '_num').val()) - 1);
                  // 枚数をカウントする
                  countDeck();
                  newOperation(id);
              }
          } else {
              // 数を取得
              if ($('#card_side_' + id + '_num').val() == 1) {
                  if(window.confirm(oya.name + 'をサイドデッキから削除します。')){
                      // var oOyaNode = $('#deck_side_' + cardIdList[id]['D']);
                      $('#div_side_' + id).remove();
                      // デッキからIDを削除
                      deckList = deckList.filter(x => x.id === id);

                      // 枚数をカウントする
                      countDeck();
                  }
              } else {
                  // 1枚へらす
                  oya.count--;
                  $('#card_side_' + id + '_num').val(parseInt($('#card_side_' + id + '_num').val()) - 1);
                  // 枚数をカウントする
                  countDeck();
                  newOperation(id);
              }
          }
          deleteCardNum(id);
          return false;
      }

      function createHtml(id) {
          var oya = resultList.data.map(x => x.id == id ? x : null).filter(x => x)[0];

          var text = "";
          var add_function_name = "addMainCard";
          var delete_function_name = "deleteMainCard";
          var settougo = "card_";
          var settougo_name = "";
          if (main_flag == 0) {
              add_function_name = "addSideCard";
              delete_function_name = "deleteSideCard";
              settougo = "card_side_";
              settougo_name = "side_";
          }
          // モンスター
          if (oya.type == 0 || oya.type == 3) {
              text = "<div class='div_left' ><input type='text' name=\""+ settougo_name + id +"\" value='1' maxlength='1' size='2px' id='" + settougo + id +"_num' readonly='readonly' />枚　<a href='/cards/" + id + "' target='_blank'>" + oya.name + '</a><br /></div><div class="div_right"><font class="pc_only">' + attributeList[oya.attribute_id] + '' + ("-" + oya.level).slice(-2) + '　' + "</font><a onclick='"+delete_function_name+"(" + id + ");return false;'>" +'▽</a>' + ' ' + "<a onclick='"+add_function_name+"(" + id + ");return false;'>" +'▲</a><br clear="all"></div>';
          }
          // 魔法・罠
          else {
              text = "<div class='div_left' ><input type='text' name=\""+ settougo_name +id +"\" value='1' maxlength='1' size='2px' id='" + settougo + id +"_num' readonly='readonly'>枚　<a href='/cards/" + id + "' target='_blank'>" + oya.name + '</a></div><div class="div_right"><font class="pc_only">' + oya.effect + '　' + "</font><a href='#' onclick='"+delete_function_name+"(" + id + ");return false;'>" +'▽</a>' + "<a onclick='"+add_function_name+"(" + id + ");return false;'>" +'▲</a><br clear="all"></div>';
          }
          return text;
      }

      function getCss(kindId){
          if (kindId == 0) {
              return '#FAEBD7';
          }
          else if (kindId == 1) {
              return '#DEB887';
          }
          else if (kindId == 2) {
              return '#cc99ff';
          }
          else if (kindId == 3) {
              return '#a4bdff';
          }
          else if (kindId == 4) {
              return '#FFFFFF';
          }
          else if (kindId == 106) {
              return '#000000';
          }
          else if (kindId == 112) {
              return '#2e8b57';
          }
          else if (kindId == 113) {
              return 'cornflowerblue';
          }
          else if (200 <= kindId && kindId < 300) {
              return '#8FBC8F';
          } else if (300 <= kindId) {
              return '#d0afee';
          } else {
              return '';
          }
      }

      function addMainCard(id) {
          var tmp_main_flag = main_flag;
          main_flag = 1;
          addCard(id);
          main_flag = tmp_main_flag;
      }

      function deleteMainCard(id) {
          var tmp_main_flag = main_flag;
          main_flag = 1;
          deleteCard(id);
          main_flag = tmp_main_flag;
      }

      function addSideCard(id) {
          var tmp_main_flag = main_flag;
          main_flag = 0;
          addCard(id);
          main_flag = tmp_main_flag;
      }

      function deleteSideCard(id) {
          var tmp_main_flag = main_flag;
          main_flag = 0;
          deleteCard(id);
          main_flag = tmp_main_flag;
      }

      function select_main() {
          main_flag = 1;
          $(".side_edit").removeClass("now_select");
          $(".main_edit").addClass("now_select");
      }

      function select_side() {
          main_flag = 0;
          $(".side_edit").addClass("now_select");
          $(".main_edit").removeClass("now_select");
      }

      // 枚数をカウントする
      function countDeck() {
          var countList = new Array();
          countList[0] = 0;
          countList[1] = 0;
          countList[2] = 0;
          countList[3] = 0;
          countList[4] = 0;
          // 数える
          for (var i = 0;i < deckList.length;i++) {
              console.log(parseInt($('#card_' + deckList[i].id + "_num").val()));
              countList[deckList[i].type] = parseInt(countList[deckList[i].type]) + parseInt($('#card_' + deckList[i].id + "_num").val());
              console.log(countList[deckList[i].type]);
          }
          for (var i = 0;i < sideDeckList.length;i++) {
              countList[4] = parseInt(countList[4]) + parseInt($('#card_side_' + sideDeckList[i].id + "_num").val());
          }

          console.log(deckList);
          console.log(sideDeckList);

          // 反映する
          $("#deck_num_0").html(countList[0] + "枚");
          $("#deck_num_1").html(countList[1] + "枚");
          $("#deck_num_2").html(countList[2] + "枚");
          $("#deck_num_3").html(countList[3] + "枚");
          $("#deck_num_4").html(countList[4] + "枚");
          deck_num_0 = countList[0];
          deck_num_1 = countList[1];
          deck_num_2 = countList[2];
          deck_num_3 = countList[3];
          deck_num_4 = countList[4];
          var total = parseInt(countList[0]) +  parseInt(countList[1]) +  parseInt(countList[2]);
          for (var i = 0;i <= 3;i++) {
              if (countList[i] == 0) {
                  $("#deck_first_" + i).show();
              } else {
                  $("#deck_first_" + i).hide();
              }
          }
          $("#deck_total").html("デッキ／" + total + "枚　エクストラ／" + countList[3] + "枚");
          $("#deck_total_side").html("サイドデッキ／" + parseInt(countList[4]) + "枚");
      }

      // 最後に更新したものを目立たせる
      function newOperation(id) {
          $('.deck_card_sotowaku').css('background-color', '#ffffff');
          if (main_flag == 1) {
              if ($('#div_' + id) != null) {
                  $('#div_' + id).css('background-color', '#ffcccc');
              }
          } else {
              if ($('#div_side_' + id) != null) {
                  $('#div_side_' + id).css('background-color', '#ffcccc');
              }
          }
          lastUpdateId = id;
      }

      // チェックして送信
      function checkSubmit() {
          var name = $('#deck_name').val();
          var category_id = $('#deck_category_id').val();
          var data = {};
          data.name = name;
          data.category_id = category_id;
          data.main = deckList.map(x => x);
          data.side = sideDeckList.map(x => x);

          // デッキ枚数エラー
          if (!((deck_num_0 + deck_num_1 + deck_num_2 + deck_num_3 + deck_num_4) >= 40 && (deck_num_0 + deck_num_1 + deck_num_2 + deck_num_3 + deck_num_4) <= 60)) {
              alert('デッキは40枚以上、60枚以下にしてください。');
          } else if (deck_num_3 > 15) {
              alert('エクストラデッキは15枚以下にしてください。');
          } else {
              $.ajax({
                  type: "POST",
                  url: '/decks',
                  dataType: 'json',
                  data: {deck: data},
                  success: function (result) {
                      console.log(result);

                      if (result.status == 200) {
                          location.href = '/decks/' + result.deck_id;
                      }else{
                          alert('登録できませんでした');
                      }
                  },
                  error: function (XMLHttpRequest, textStatus, errorThrown) {
                      console.log(XMLHttpRequest);
                  }
              });
          }
      }

  </script>

  <br class="clear">
  <script src="/assets/js/base.js"  type="text/javascript"></script>
  <script type="text/javascript">baseStart();</script>
</div>
</body>